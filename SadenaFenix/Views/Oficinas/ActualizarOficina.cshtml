@model SadenaFenix.Models.Georeferenciacion.Oficina

@{
    Layout = "~/Views/Shared/_GeoLayout.cshtml";
    ViewData["Root"] = "SANS";
    ViewData["Modulo"] = "Georeferenciación";
    ViewData["Option"] = "Oficialias/Módulos Hospitalarios";
    ViewData["TableName"] = "Actualizar Oficialía/Módulo Hospitalario";
    ViewData["Title"] = ViewData["Modulo"] + " / " + ViewData["Option"];
}
@section Scripts
{
    <script src="@Url.Content("~/Scripts/js/georefenciacion/actualizarOficina.js")"></script>
    <script src="@Url.Content("~/Scripts/js/utilerias/mapasOficina.js")"></script>
    <!-- Replace the value of the key parameter with your own API key. -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAZR7MAkSG9XJovKvEhEfBOa--vPwt5IzM&libraries=places&callback=initMap"
            async defer></script>

}

<!-- Page content -->
<div class="page-content">

    <input type="hidden" name="objUsuario" id="objUsuario" value="@ViewBag.UserJson" />

    <!-- Container -->
    <div class="container">

        <!-- Breadcrumb -->
        <section class="pull-right">
            <ul class="breadcrumb">
                <li><a asp-area="" asp-controller="Home" asp-action="Index"><i class="fa fa-home mr-3"></i>@ViewData["Root"]</a></li>
                <li><a href="#">@ViewData["Modulo"]</a></li>
                <li class="active">@ViewData["Option"]</li>
            </ul>
        </section>
        <!-- ./breadcrumb -->

        <section>
            <div class="row">
                <div class="col-sm-12">
                    <div class="well loading-well">

                        <fieldset>
                            <legend>@ViewData["TableName"]</legend>

                            <div class="form-horizontal">

                                <hr />

                                @Html.HiddenFor(model => model.OId)

                                <ul class="nav nav-tabs">
                                    <li class="active">
                                        <a href="#ubicacionOficina" data-toggle="tab">Ubicación de la Oficina</a>
                                    </li>
                                    <li><a href="#oficialCargo" data-toggle="tab">Oficial a cargo</a></li>
                                    <li><a href="#InmuebleYMobiliario" data-toggle="tab">Inmueble y mobiliario</a></li>
                                    <li><a href="#EquipamientoYConectividad" data-toggle="tab">Equipamiento y conectividad</a></li>
                                </ul>

                                <div class="tab-content tabOficina">

                                    <div id="ubicacionOficina" class="tab-pane fade in active">

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TipoDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.TipoDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @identificador = Model.TipoId } })
                                                @Html.DropDownListFor(model => model.TipoId, new SelectList(Model.TipoLista, "TipoId", "TipoDesc"), new { id = "TipoLista", @class = "selectTipo show-tick form-control hiddElement" })
                                                @Html.ValidationMessageFor(model => model.TipoDesc, "", new { @class = "text-danger", @id = "valMessageTipo" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.OficinaId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.OficinaId, new { htmlAttributes = new { @class = "form-control ValidacionNumero", @maxlength = "10", @placeholder = "Oficina Id", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.OficinaId, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.TipoInstitucion, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.TipoInstitucion, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "60", @placeholder = "Tipo de Institución" } })
                                                @Html.ValidationMessageFor(model => model.TipoInstitucion, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Institucion, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Institucion, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "60", @placeholder = "Nombre de Institución" } })
                                                @Html.ValidationMessageFor(model => model.Institucion, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "60", @placeholder = "Región" } })
                                                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Latitud, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Latitud, new { htmlAttributes = new { @class = "form-control", @maxlength = "20", @placeholder = "Latitud" } })
                                                @Html.ValidationMessageFor(model => model.Latitud, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.Longitud, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Longitud, new { htmlAttributes = new { @class = "form-control", @maxlength = "20", @placeholder = "Longitud" } })
                                                @Html.ValidationMessageFor(model => model.Longitud, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div>
                                                @Html.LabelFor(model => model.MpioDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.MpioDesc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @identificador = Model.MpioId } })
                                                    @Html.DropDownListFor(model => model.MpioId, new SelectList(Model.MunicipioLista, "MpioId", "MpioDesc"), new { id = "MunicipioLista", @class = "selectMpio show-tick form-control hiddElement" })
                                                    @Html.ValidationMessageFor(model => model.MpioDesc, "", new { @class = "text-danger", @id = "valMessageMpio" })
                                                </div>
                                            </div>
                                            <div>
                                                @Html.LabelFor(model => model.LocDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-4">
                                                    @Html.EditorFor(model => model.LocDesc, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "60", @placeholder = "Localidad", @readonly = "readonly", @identificador = Model.LocId } })
                                                    @Html.DropDownListFor(model => model.LocId, new SelectList(Model.LocalidadLista, "LocId", "LocDesc", "LocMpioId", "LocMpioDesc", "", ""), new { id = "LocalidadLista", @class = "selectLoc show-tick form-control hiddElement" })
                                                    @Html.ValidationMessageFor(model => model.LocDesc, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Calle, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Calle, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "60", @placeholder = "Calle" } })
                                                @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "10", @placeholder = "Número" } })
                                                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Colonia, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Colonia, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "60", @placeholder = "Colonia" } })
                                                @Html.ValidationMessageFor(model => model.Colonia, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.CP, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.CP, new { htmlAttributes = new { @class = "form-control ValidacionNumero", @maxlength = "5", @placeholder = "Código Postal" } })
                                                @Html.ValidationMessageFor(model => model.CP, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EntreCalles, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.EntreCalles, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "200", @placeholder = "Entre calles" } })
                                                @Html.ValidationMessageFor(model => model.EntreCalles, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.HorarioAtencion, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.HorarioAtencion, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "50", @placeholder = "Horario de Atención" } })
                                                @Html.ValidationMessageFor(model => model.HorarioAtencion, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div id="oficialCargo" class="tab-pane">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.OficialNombre, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.OficialNombre, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "80", @placeholder = "Nombre del Oficial" } })
                                                @Html.ValidationMessageFor(model => model.OficialNombre, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.OficialApellidos, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.OficialApellidos, new { htmlAttributes = new { @class = "form-control ValidacionTexto", @maxlength = "80", @placeholder = "Apellidos del oficial" } })
                                                @Html.ValidationMessageFor(model => model.OficialApellidos, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control ValidacionTelefono", @maxlength = "25", @placeholder = "Teléfono" } })
                                                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.CorreoE, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.CorreoE, new { htmlAttributes = new { @class = "form-control", @maxlength = "60", @placeholder = "Correo electrónico" } })
                                                @Html.ValidationMessageFor(model => model.CorreoE, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div id="InmuebleYMobiliario" class="tab-pane fade">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.InvSerLuz, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.InvSerLuz">
                                                <input id="InvSerLuz" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>

                                            @Html.LabelFor(model => model.InvSerAgua, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.InvSerAgua">
                                                <input id="InvSerAgua" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>

                                            @Html.LabelFor(model => model.InvLocalPropio, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.InvLocalPropio">
                                                <input id="InvLocalPropio" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>
                                        </div>

                                        <div class="form-group">

                                            @Html.LabelFor(model => model.InvSerSanitario, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4 toogleStyleOficinas" valorToggle="@Model.InvSerSanitario">
                                                <input id="InvSerSanitario" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>

                                            @Html.LabelFor(model => model.InvEscritorios, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvEscritorios, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvEscritorios, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">

                                            @Html.LabelFor(model => model.InvSillas, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvSillas, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvSillas, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.InvArchiveros, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvArchiveros, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvArchiveros, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.InvCompPriv, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvCompPriv, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvCompPriv, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.InvCompGob, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvCompGob, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvCompGob, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div id="EquipamientoYConectividad" class="tab-pane fade">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.InvEscanPriv, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvEscanPriv, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvEscanPriv, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.InvEscanGob, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvEscanGob, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvEscanGob, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.InvImpPriv, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvImpPriv, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvImpPriv, "", new { @class = "text-danger" })
                                            </div>

                                            @Html.LabelFor(model => model.InvImpGob, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.EditorFor(model => model.InvImpGob, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                                @Html.ValidationMessageFor(model => model.InvImpGob, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EquiNet, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.EquiNet">
                                                <input id="EquiNet" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>

                                            @Html.LabelFor(model => model.EquiTrabNet, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.EquiTrabNet">
                                                <input id="EquiTrabNet" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>

                                            @Html.LabelFor(model => model.EquiVentExpress, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.EquiVentExpress">
                                                <input id="EquiVentExpress" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.EquiConDrc, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.EquiConDrc">
                                                <input id="EquiConDrc" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>

                                            @Html.LabelFor(model => model.ExpideCurp, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.ExpideCurp">
                                                <input id="ExpideCurp" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>

                                            @Html.LabelFor(model => model.ExpideActasForaneas, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-2 toogleStyleOficinas" valorToggle="@Model.ExpideActasForaneas">
                                                <input id="ExpideActasForaneas" class="toggleChecks" type="checkbox" data-toggle="toggle" data-on="SI" data-off="NO">
                                            </div>
                                        </div>
                                    </div>

                                </div><!--fin del tabcontent-->

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input id="BotonActualizarOficina" type="submit" value="Actualizar" class="btn btn-primary" />
                                    </div>
                                </div>

                            </div><!--fin del form horizontal-->

                            <a class="callConsultaOficinas" href="#">Ir a Consulta Oficialías/Módulos Hospitalarios</a>                            
                        </fieldset>
                    </div>
                </div>
            </div>

        </section>

    </div>
    <!-- ./container -->
    <!-- Container -->
    <div class="container">

        <section>

            <div style="display: none">
                <input id="inputUbicacionMapa"
                       class="controls"
                       type="text"
                       placeholder="Introduce la ubicación">
            </div>

            @*<div id="infowindow-content">
                    <span id="place-name" class="title"></span><br>
                    <strong>Place ID:</strong> <span id="place-id"></span><br>
                    <span id="place-address"></span>
                </div>*@

            <div id="infowindow-content">
                <img src="" width="16" height="16" id="place-icon">
                <span id="place-name" class="title"></span><br>
                <span id="place-address"></span>
            </div>


            <div id="mapGoogle" class="z-depth-1-half map-container" style="height: 500px">
                <iframe src="https://maps.google.com/maps?q=manhatan&t=&z=13&ie=UTF8&iwloc=&output=embed" frameborder="0"
                        style="border:0" allowfullscreen></iframe>
            </div>
        </section>

    </div>
    <!-- ./container -->
</div>
<!-- ./page content -->